import{initializeApp}from"https://www.gstatic.com/firebasejs/10.1.0/firebase-app.js";import{createUserWithEmailAndPassword,getAuth,updateProfile}from"https://www.gstatic.com/firebasejs/10.1.0/firebase-auth.js";import{collection,doc,getFirestore,setDoc}from"https://www.gstatic.com/firebasejs/10.1.0/firebase-firestore.js";const firebaseConfig={apiKey:"AIzaSyCoTVeUde0QJeBxMrj5J-6E0Cdwmn2AgjA",authDomain:"inthesify-new.firebaseapp.com",databaseURL:"https://inthesify-new-default-rtdb.firebaseio.com",projectId:"inthesify-new",storageBucket:"inthesify-new.appspot.com",messagingSenderId:"346177356137",appId:"1:346177356137:web:5823438d09c201978ebdf8"},app=initializeApp(firebaseConfig),auth=getAuth(app),db=getFirestore(app),email=document.querySelector("#email"),fname=document.querySelector("#fullname"),password=document.querySelector("#password"),username=document.querySelector("#username"),nameError=document.querySelector("#invalid-feedback-fullname"),emailError=document.querySelector("#invalid-feedback-email"),passwordError=document.querySelector("#invalid-feedback-password"),usernameError=document.querySelector("#invalid-feedback-username"),signupForm=document.querySelector("#signup-form"),nameRegex=/^[a-zA-Z]+\s+[a-zA-Z]+$/,emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,passwordRegex=/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\-_=+{}[\]:;'",.<>/?])(?=.{8,})/,usernameRegex=/^[_a-zA-Z0-9]{3,20}$/;function validation(){const e=[{inputField:email,regex:emailRegex,errorElement:emailError,errorMessage:"Please enter a valid email address."},{inputField:fname,regex:nameRegex,errorElement:nameError,errorMessage:"Please enter your full name."},{inputField:password,regex:passwordRegex,errorElement:passwordError,errorMessage:"Your password must:<br>- Contain at least one uppercase letter (A-Z)<br>- Contain at least one lowercase letter (a-z)<br>- Include at least one number (0-9)<br>- Include at least one special character<br>- Be at least 8 characters long.<br><br>Please choose a stronger password."},{inputField:username,regex:usernameRegex,errorElement:usernameError,errorMessage:"Invalid username. Must be 3-20 characters long and can only contain letters, digits, and underscores."}];return e.forEach(e=>{e.errorElement.textContent=""}),e.every(e=>!!e.regex.test(e.inputField.value.trim())||(e.errorElement.innerHTML=e.errorMessage,e.errorElement.classList.replace("invalid-feedback","d-block"),!1))}async function registerUser(){const e=email.value.trim().toLowerCase(),r=fname.value.trim().toLowerCase(),a=password.value.trim(),t=username.value.trim().toLowerCase();try{if(!validation())return;const s=await createUserWithEmailAndPassword(auth,e,a);await updateProfile(s.user,{displayName:r});const o=collection(db,"UsersList"),n=s.user.uid,i={email:e,fullName:r,role:"User",username:t};await setDoc(doc(o,n),i),signupForm.reset(),console.log("USER CREATED"),console.log("CREDENTIALS: ",s),window.location.href="index.html"}catch(e){console.error("ERROR: ",e.message)}}signupForm.addEventListener("submit",e=>{e.preventDefault(),registerUser()});