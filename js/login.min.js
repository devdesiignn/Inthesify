import{initializeApp}from"https://www.gstatic.com/firebasejs/10.1.0/firebase-app.js";import{browserSessionPersistence,getAuth,onAuthStateChanged,setPersistence,signInWithEmailAndPassword}from"https://www.gstatic.com/firebasejs/10.1.0/firebase-auth.js";const firebaseConfig={apiKey:"AIzaSyCoTVeUde0QJeBxMrj5J-6E0Cdwmn2AgjA",authDomain:"inthesify-new.firebaseapp.com",databaseURL:"https://inthesify-new-default-rtdb.firebaseio.com",projectId:"inthesify-new",storageBucket:"inthesify-new.appspot.com",messagingSenderId:"346177356137",appId:"1:346177356137:web:5823438d09c201978ebdf8"},app=initializeApp(firebaseConfig),auth=getAuth(app),email=document.querySelector("#email"),password=document.querySelector("#password"),emailError=document.querySelector("#invalid-feedback-email"),passwordError=document.querySelector("#invalid-feedback-password"),toggle=document.querySelector("#keep-logged-in"),emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,loginForm=document.querySelector("#login-form");function validation(){const e=[{inputField:email,regex:emailRegex,errorElement:emailError,errorMessage:"Please enter a valid email address."}];e.forEach(e=>{e.errorElement.textContent=""});let r=!0;return e.forEach(e=>{e.regex.test(e.inputField.value.trim())||(e.errorElement.innerHTML=e.errorMessage,e.errorElement.classList.replace("invalid-feedback","d-block"),r=!1)}),r}function resetErrorMessages(){emailError.textContent="",passwordError.textContent="",emailError.classList.replace("d-block","invalid-feedback"),passwordError.classList.replace("d-block","invalid-feedback")}function resetLoginForm(){loginForm.reset()}function autoLogin(){const e=JSON.parse(savedDetails);console.log("Auto-logging in user:",e),email.value=e.email,loginForm.submit(),window.location.href="search.html"}function saveSession(e,r){const t=r?localStorage:sessionStorage;t.setItem("user",JSON.stringify(e)),t.setItem("keepLoggedIn",JSON.stringify(r)),console.log(`User logged in, ${r?"Remain Signed In":"NOT Remain Signed In"}`)}async function manualLogin(){const e=email.value.toLowerCase().trim(),r=password.value.trim();try{if(!validation())return;const t=(await signInWithEmailAndPassword(auth,e,r)).user;console.log("User is MANUALLY signed in:",t),saveSession(t,toggle.checked),resetLoginForm(),window.location.href="search.html"}catch(e){console.error("ERROR: ",e.message),emailError.textContent="Incorrect Email/Password. Please try again.",emailError.classList.replace("invalid-feedback","d-block"),passwordError.textContent="Incorrect Email/Password. Please try again.",passwordError.classList.replace("invalid-feedback","d-block")}}async function checkAuth(){await setPersistence(auth,browserSessionPersistence),onAuthStateChanged(auth,e=>{if(e)console.log("User is already signed in:",e),window.location.href="search.html";else{localStorage.getItem("user")?autoLogin():manualLogin()}sessionStorage.setItem("user",JSON.stringify(e))})}loginForm.addEventListener("submit",e=>{e.preventDefault(),resetErrorMessages(),checkAuth()});